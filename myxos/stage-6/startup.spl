//Author : Jayaprakash
// Stage 6 : OS startup code
// Context switching


load(7,1);//loading exhandler
load(8,2);//loading exhandler
load(23,17);//loading interrupt 7
load(24,18);//loading interrupt 7
[READY_LIST + 0] = 0;
load(25,21); // Load 1st page of code from disk to memory
load(26,22); // Load 2nd page of code from disk to memory
load(27,23); // Load 3rd page of code from disk to memory



load(29,25 ); // Load the page of code corresponding to the exec file

load (11, 5);//Loading interrupt1
load (12, 6);

// Setting up page table for 1st process
PTBR = 1024; 
PTLR = 4; 
[PTBR + 0] = 25; 
[PTBR + 1] = "01"; 
[PTBR + 2] = 26; 
[PTBR + 3] = "01"; 
[PTBR + 4] = 27; 
[PTBR + 5] = "01"; 
[PTBR + 6] = 28;
[PTBR + 7] = "01";


alias PTBR_Process1 S0;
PTBR_Process1 = 1024 + 1 * 8; 

// Setting up page table for 2nd process

[PTBR_Process1 + 0] = 29; // Physical Page Number for Logical Page 0
[PTBR_Process1 + 1] = "01"; // Not referenced and Valid
[PTBR_Process1 + 2] = -1; // Invalid Page Number for Logical Page 1
[PTBR_Process1 + 3] = "00"; // Not referenced and Not Valid
[PTBR_Process1 + 4] = -1; // Invalid Page Number for Logical Page 2
[PTBR_Process1 + 5] = "00"; // Not referenced and Not Valid
[PTBR_Process1 + 6] = 30; // Physical Page Number for Logical Page 3
[PTBR_Process1 + 7] = "01"; // Not referenced and Valid

[READY_LIST + 33] = 1; // STATE is READY 
[READY_LIST + 34] = 3 * 512; // Sets the entry for BP in the PCB
[READY_LIST + 35] = 3 * 512; // Sets the entry for SP in the PCB 
[READY_LIST + 36] = 0; // Sets the entry for IP to logical address 0 in the PCB
[READY_LIST + 37] = PTBR_Process1; // PTBR
[READY_LIST + 38] = 4; // PTLR 


//Interrupts
load (9, 3);//loading timer interrupt routine
load (10, 4);//loading timer interrupt routine

[READY_LIST + 1] = 2;
SP = 3 * 512; //stack pointer
[28 * 512] = 0;

ireturn; 
