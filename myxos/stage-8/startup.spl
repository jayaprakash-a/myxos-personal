//Author : Jayaprakash
// Stage 6 : OS startup code
// Context switching


load(7,1);//loading exhandler
load(8,2);//loading exhandler
load(23,17);//loading interrupt 7
load(24,18);//loading interrupt 7
[READY_LIST + 0] = 0;
load(25,21); // Load 1st page of code from disk to memory
load(26,22); // Load 2nd page of code from disk to memory
load(27,23); // Load 3rd page of code from disk to memory


load (11, 5);//Loading interrupt1
load (12, 6);

// Setting up page table for 1st process
PTBR = 1024; 
PTLR = 4; 
[PTBR + 0] = 25; 
[PTBR + 1] = "01"; 
[PTBR + 2] = 26; 
[PTBR + 3] = "01"; 
[PTBR + 4] = 27; 
[PTBR + 5] = "01"; 
[PTBR + 6] = 28;
[PTBR + 7] = "01";


//Interrupts
load (9, 3);//loading timer interrupt routine
load (10, 4);//loading timer interrupt routine

[READY_LIST + 1] = 2;
SP = 3 * 512; //stack pointer
[28 * 512] = 0;

load (5, 19);			//loading FAT block in disc
load (6, 20);			//load dfs list

alias counter S0;			
counter = 0;
while ( counter <  128) do			// 64 entries, each of size 2 words
	[ FILE_TABLE + counter + 0] = -1;	// Set FAT Index to -1
	[ FILE_TABLE + counter + 1] =  0;	// Set File Open Count to 0
	counter = counter + 2;			// Move to next entry
endwhile;


alias pid S2;
pid = (PTBR - 1024)/8;
counter = 15;
while (counter < 31) do
	[READY_LIST + 32*pid + counter] = -1;
	counter = counter + 1;
endwhile;


load(13,7);    //loading interrupt rountine for interrupt 2
load(14,8);

load(15,9);     //loading interrupt rountine for interrupt 3
load(16,10);

load(17,11);     //loading interrupt rountine for interrupt 4
load(18,12);

ireturn; 
